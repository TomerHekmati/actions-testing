name: Release

on:

  workflow_call:
    inputs:
      os:
        description: "operating system for the redis cluster"
        required: true
        type: string
      cluster_version:
        description: "redis cluster version"
        required: true
        type: string
      module_version:
        description: "The module version"
        required: true
        type: string
      module_name:
        description: "Redis module name"
        required: true
        type: string

jobs:

  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: download lfs dependencies
        uses: actions/checkout@v3
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout
      - name: invoke install
        run: |
          pip install --upgrade pip invoke

      # somehow get his from s3 || jenkins || whatever
      - name: get build number for cluster ${{inputs.cluster_version}}
        id: build_number
        env:
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id}}
        run: |
          echo 'BUILD_NUMBER=$(invoke -c my_tasks get-cluster-version-build --cluster-version="${{ inputs.cluster_version }}")' >> $GITHUB_OUTPUT
      - name: EXAMPLE get build number
        run: echo ${{ steps.build_number.outputs.BUILD_NUMBER }}

      - name: determine if ${{inputs.os}} support for ${{inputs.cluster_version}}
        id: os_supported
        run: |
          echo 'OS_SUPPORTED=$(invoke -c my_tasks determine-cluster-support-os --cluster-version="${{ inputs.cluster_version }}" --os="${{ inputs.os }}")' >> $GITHUB_OUTPUT
          echo "HERE I FIND OUT IF I AM RELEASED FOR ${{inputs.os}}"
      - name: EXAMPLE get os_supported
        run: echo ${{ steps.build_number.outputs.OS_SUPPORTED }}

      # run the python script, it should exit 0 || 1
      - name: determine if we can test this module on this cluster version
        id: module_supported
        run: |
          echo foo

      # set a variable only if cluster / os / module_version combination is supported
      # - name: 
      #   id: supported
      #   if: ${{steps.os_supported.outputs.OS_SUPPORTED == "YES" && steps.....}}
      #   run:

      - name: echo all the things
        run: |
          echo ${{inputs.os}} is the OS
          echo ${{inputs.cluster_version}} is the cluster_version
          echo ${{inputs.module_version}} is the module_version
          echo ${{inputs.module_name}} is the module_name

      # - name: run
      #   if: ${{steps.supported.outputs.FULLY_SUPPORTED = 'yes'}}
      #   run: |
      #     echo
      # - name: star the cluster
      # run: invoke -c env0_tasks --cluster-version ${{inputs.cluster_version}}.{{steps.build_number.outputs.BUILD_NUMBER}}